gc()
overal_m_sus_dec$condition = "Medium"
# Susceptible (S)
overal_sus_dec = gain_sus_dec %>%
#mutate(sev_class = " Overall") %>%
dplyr::group_by(year, class,class2) %>%
summarise(yield_gain_median = median(yield_gain_sus),
yield_gain_mean = mean(yield_gain_sus),
up_95 = quantile(yield_gain_sus, 0.975),
low_95 = quantile(yield_gain_sus, 0.025),
up_75 = quantile(yield_gain_sus, 0.75),
low_75 = quantile(yield_gain_sus, 0.25))
gc()
overal_sus_dec$condition = "Low"
overall_cultivar_dec = rbind(overal_res_dec,overal_m_sus_dec,overal_sus_dec)
overall_cultivar_dec <- overall_cultivar_dec %>%
mutate(condition = factor(condition, levels = c("High", "Medium", "Low")))
loss_overall = overall_cultivar_dec %>%
filter(year %in% c("0","8")) %>%
group_by(condition, class, class2) %>%
summarise(
yield_diff = yield_gain_mean[year == 8] - yield_gain_mean[year == 0],
sc = (yield_diff*-1)/27.21, # Sc para bushel
loss = sc*10.97 #Pre√ßo do bushel
)
loss_overall <- loss_overall %>%
mutate(condition = factor(condition, levels = c("High", "Medium", "Low")))
loss <- overall_cultivar_dec %>%
filter(!is.na(class)) %>%
filter(year %in% 0:8) %>%
group_by(condition, class, class2) %>%
mutate(yield_gain_zero = yield_gain_mean[year == 0],
up_95_zero = up_95[year == 0],
low_95_zero = low_95[year == 0]) %>%
filter(year != 0) %>%
summarise(
year = year,
yield_diff = yield_gain_mean - yield_gain_zero,
up_95_diff = up_95 - up_95_zero,
low_95_diff = low_95 - low_95_zero,
sc_yield = (yield_diff*-1)/27.21,
sc_up = (up_95_diff*-1)/27.21,
sc_low = (low_95_diff*-1)/27.21,
loss_yield = sc_yield*10.97,
loss_up = sc_up*10.97,
loss_low = sc_low*10.97
)
loss
# Scenarios
loss %>%
group_by(condition,class, class2) %>%
summarise(
rate = cov(year, loss_yield) / var(year))
# Overall
loss %>%
group_by(condition) %>%
summarise(
rate = cov(year, loss_yield) / var(year))
qt_res_overall = gain_res %>%
filter(C <= 180) %>%
filter(C >= 60) %>%
#mutate(sev_class = " Overall") %>%
#dplyr::group_by(class,class2) %>%
filter(lambda %in% c(0.40,0.80)) %>%
dplyr::group_by(lambda) %>%
summarise(
yield_gain_mean = mean(yield_gain_res),
yield_gain_median = median(yield_gain_res),
low_95 = quantile(yield_gain_res, 0.025),
up_95 = quantile(yield_gain_res, 0.975),
up_75 = quantile(yield_gain_res, 0.75),
low_75 = quantile(yield_gain_res, 0.25))
# Moderate Susceptible (MS)
qt_m_sus_overall = gain_m_sus %>%
filter(C <= 180) %>%
filter(C >= 60) %>%
filter(lambda %in% c(0.40,0.80)) %>%
dplyr::group_by(lambda) %>%
summarise(yield_gain_mean = mean(yield_gain_m_sus),
yield_gain_median = median(yield_gain_m_sus),
low_95 = quantile(yield_gain_m_sus, 0.025),
up_95 = quantile(yield_gain_m_sus, 0.975),
up_75 = quantile(yield_gain_m_sus, 0.75),
low_75 = quantile(yield_gain_m_sus, 0.25))
gc()
# Susceptible (S)
qt_sus_overall = gain_sus %>%
filter(C <= 180) %>%
filter(C >= 60) %>%
filter(lambda %in% c(0.40,0.80)) %>%
dplyr::group_by(lambda) %>%
summarise(yield_gain_mean = mean(yield_gain_sus),
yield_gain_median = median(yield_gain_sus),
low_95 = quantile(yield_gain_sus, 0.025),
up_95 = quantile(yield_gain_sus, 0.975),
up_75 = quantile(yield_gain_sus, 0.75),
low_75 = quantile(yield_gain_sus, 0.25))
gc()
qt_res = gain_res %>%
filter(C <= 180) %>%
filter(C >= 60) %>%
filter(lambda %in% c(0.40,0.80)) %>%
#mutate(sev_class = " Overall") %>%
dplyr::group_by(lambda,class,class2) %>%
summarise(yield_gain_mean = mean(yield_gain_res),
yield_gain_median = median(yield_gain_res),
low_95 = quantile(yield_gain_res, 0.025),
up_95 = quantile(yield_gain_res, 0.975),
up_75 = quantile(yield_gain_res, 0.75),
low_75 = quantile(yield_gain_res, 0.25))
# Moderate Susceptible (MS)
qt_m_sus = gain_m_sus %>%
filter(C <= 180) %>%
filter(C >= 60) %>%
#mutate(sev_class = " Overall") %>%
filter(lambda %in% c(0.40,0.80)) %>%
dplyr::group_by(lambda,class,class2) %>%
summarise(yield_gain_mean = mean(yield_gain_m_sus),
yield_gain_median = median(yield_gain_m_sus),
low_95 = quantile(yield_gain_m_sus, 0.025),
up_95 = quantile(yield_gain_m_sus, 0.975),
up_75 = quantile(yield_gain_m_sus, 0.75),
low_75 = quantile(yield_gain_m_sus, 0.25))
gc()
# Susceptible (S)
qt_sus = gain_sus %>%
filter(C <= 180) %>%
filter(C >= 60) %>%
#mutate(sev_class = " Overall") %>%
filter(lambda %in% c(0.40,0.80)) %>%
dplyr::group_by(lambda,class,class2) %>%
summarise(yield_gain_mean = mean(yield_gain_sus),
yield_gain_median = median(yield_gain_sus),
low_95 = quantile(yield_gain_sus, 0.025),
up_95 = quantile(yield_gain_sus, 0.975),
up_75 = quantile(yield_gain_sus, 0.75),
low_75 = quantile(yield_gain_sus, 0.25))
high_p
loss <- overall_cultivar_dec %>%
filter(!is.na(class)) %>%
filter(year %in% 0:8) %>%
group_by(condition, class, class2) %>%
mutate(yield_gain_zero = yield_gain_mean[year == 0],
up_95_zero = up_95[year == 0],
low_95_zero = low_95[year == 0]) %>%
filter(year != 0) %>%
summarise(
year = year,
yield_diff = yield_gain_mean - yield_gain_zero,
up_95_diff = up_95 - up_95_zero,
low_95_diff = low_95 - low_95_zero,
sc_yield = (yield_diff*-1)/27.21,
sc_up = (up_95_diff*-1)/27.21,
sc_low = (low_95_diff*-1)/27.21,
loss_yield = sc_yield*10.97,
loss_up = sc_up*10.97,
loss_low = sc_low*10.97
)
loss
decline
overall_cultivar_dec
write_xlsx(overall_cultivar_dec,"data/overall_cultivar_dec")
write_xlsx(overall_cultivar_dec,"data/overall_cultivar_dec.xlsx")
overall_cultivar_dec = read_xlsx("data/overall_cultivar_dec.xlsx")
overall_cultivar_dec
write_xlsx(loss,"data/loss.xlsx")
loss
loss = read_xlsx("data/loss")
loss = read_xlsx("data/loss.xlsx")
gain_res
qt_overall = rbind(qt_res_overall,qt_m_sus_overall,qt_sus_overall)
qt_overall
write.xlsx(qt_overall,"data/qt_overall.xlsx")
write_xlsx(qt_overall,"data/qt_overall.xlsx")
qt_overall = read_xlsx("data/qt_overall.xlsx")
qt_overall
qt_res = gain_res %>%
filter(C <= 180) %>%
filter(C >= 60) %>%
filter(lambda %in% c(0.40,0.80)) %>%
#mutate(sev_class = " Overall") %>%
dplyr::group_by(lambda,class,class2) %>%
summarise(yield_gain_mean = mean(yield_gain_res),
yield_gain_median = median(yield_gain_res),
low_95 = quantile(yield_gain_res, 0.025),
up_95 = quantile(yield_gain_res, 0.975),
up_75 = quantile(yield_gain_res, 0.75),
low_75 = quantile(yield_gain_res, 0.25))
# Moderate Susceptible (MS)
qt_m_sus = gain_m_sus %>%
filter(C <= 180) %>%
filter(C >= 60) %>%
#mutate(sev_class = " Overall") %>%
filter(lambda %in% c(0.40,0.80)) %>%
dplyr::group_by(lambda,class,class2) %>%
summarise(yield_gain_mean = mean(yield_gain_m_sus),
yield_gain_median = median(yield_gain_m_sus),
low_95 = quantile(yield_gain_m_sus, 0.025),
up_95 = quantile(yield_gain_m_sus, 0.975),
up_75 = quantile(yield_gain_m_sus, 0.75),
low_75 = quantile(yield_gain_m_sus, 0.25))
gc()
# Susceptible (S)
qt_sus = gain_sus %>%
filter(C <= 180) %>%
filter(C >= 60) %>%
#mutate(sev_class = " Overall") %>%
filter(lambda %in% c(0.40,0.80)) %>%
dplyr::group_by(lambda,class,class2) %>%
summarise(yield_gain_mean = mean(yield_gain_sus),
yield_gain_median = median(yield_gain_sus),
low_95 = quantile(yield_gain_sus, 0.025),
up_95 = quantile(yield_gain_sus, 0.975),
up_75 = quantile(yield_gain_sus, 0.75),
low_75 = quantile(yield_gain_sus, 0.25))
qt_efic = rbind(qt_res,qt_m_sus,qt_sus)
write_xlsx(qt_efic,"data/qt_efic.xlsx")
qt_efic = read_xlsx("data/qt_efic.xlsx")
qt_efic
tss_overall_EDT
damage_adjusted_medium
ma_c %>%
filter(cultivar %in% c_01$cultivar) %>%
#group_by(study) %>%
do(tidy(lm(.$yld ~ .$sev)))
ma_c %>%
#group_by(study) %>%
do(tidy(lm(.$yld ~ .$sev)))
damage_c_overall = data.frame()
damage_c_overall = data.frame()
damage_c_overall
damage_c_overall$DC_overall = DC_overall
damage_c_overall["DC_overall"] = DC_overall
damage_c_overall
damage_c_overall = as.data.frame(DC_overall)
damage_c_overall
damage_c_overall$DC_1000 = DC_1000
damage_c_overall
# Overall
DC_overall = (14.7/4058)
DC_1000 = DC_overall*1000
DC_perc_overall = DC_overall*100
damage_kg = DC_1000*18.2
damage_perc  = (damage_kg*100)/1000
damage_adjusted = DC_1000*18.2*4
damage_c_overall = as.data.frame(DC_overall)
damage_c_overall$DC_1000 = DC_1000
damage_c_overall$DC_perc_overall = DC_perc_overall
damage_c_overall$damage_kg = damage_kg
damage_c_overall$damage_perc = damage_perc
damage_c_overall$damage_adjusted = damage_adjusted
damage_c_overall
DC_high = (9.7/4047)
DC_1000_high = DC_high*1000
DC_perc_high = DC_high*100
damage_kg_high = DC_1000_high*18.9
damage_perc_high  = (damage_kg_high*100)/1000
damage_adjusted_high = DC_1000_high*18.9*4
damage_h_overall = as.data.frame(DC_high)
damage_h_overall$DC_1000_high = DC_1000_high
damage_h_overall$DC_perc_high = DC_perc_high
damage_h_overall$damage_kg_high = damage_kg_high
damage_h_overall$damage_perc_high = damage_perc_high
damage_h_overall$damage_adjusted_high = damage_adjusted_high
damage_h_overall
DC_medium = (25.9/4256)
DC_1000_medium = DC_medium*1000
DC_perc_medium = DC_medium*100
damage_kg_medium = DC_1000_medium*17.3
damage_perc_medium  = (damage_kg_medium*100)/1000
damage_adjusted_medium = DC_1000_medium*17.3*4.2
damage_m_overall = as.data.frame(DC_medium)
damage_m_overall$DC_1000_medium = DC_1000_medium
damage_m_overall$DC_perc_medium = DC_perc_medium
damage_m_overall$damage_kg_medium = damage_kg_medium
damage_m_overall$damage_perc_medium = damage_perc_medium
damage_m_overall$damage_adjusted_medium = damage_adjusted_medium
damage_m_overall
DC_low = (45/4272)
DC_1000_low = DC_low*1000
DC_perc_low = DC_low*100
damage_kg_low = DC_1000_low*8.4
damage_perc_low  = (damage_kg_low*100)/1000
damage_adjusted_low = DC_1000_low*8.4*4.2
damage_l_overall = as.data.frame(DC_low)
damage_l_overall$DC_1000_low = DC_1000_low
damage_l_overall$DC_perc_low = DC_perc_low
damage_l_overall$damage_kg_low = damage_kg_low
damage_l_overall$damage_perc_low = damage_perc_low
damage_l_overall$damage_adjusted_low = damage_adjusted_low
damage_l_overall
class(res_regression)
res_regression = as.data.frame(res_regression)
m_sus_regression
gc()
library(tidyverse)
library(dplyr)
library(metafor)
library(ggplot2)
library(gsheet)
library(cowplot)
library(broom)
library(writexl)
library(readxl)
library(ggthemes)
library(minpack.lm)
t = gsheet2tbl("https://drive.google.com/file/d/1AP2XJJyxhqIUCAP6MgbtI2UdX-mwg-WG/view?usp=sharing")
t = gsheet2tbl("https://drive.google.com/file/d/1AP2XJJyxhqIUCAP6MgbtI2UdX-mwg-WG/view?usp=sharing")
t = gsheet2tbl("https://drive.google.com/file/d/1AP2XJJyxhqIUCAP6MgbtI2UdX-mwg-WG/view?usp=sharing")
t = gsheet2tbl("https://drive.google.com/file/d/1AP2XJJyxhqIUCAP6MgbtI2UdX-mwg-WG/view?usp=drive_link")
t = gsheet2tbl("https://drive.google.com/file/d/1AP2XJJyxhqIUCAP6MgbtI2UdX-mwg-WG/view?usp=drive_link")
t = read.csv("https://drive.google.com/file/d/1AP2XJJyxhqIUCAP6MgbtI2UdX-mwg-WG/view?usp=drive_link")
t = read_csv("https://drive.google.com/file/d/1AP2XJJyxhqIUCAP6MgbtI2UdX-mwg-WG/view?usp=drive_link")
t
gc()
study_counts
library(tidyverse)
library(dplyr)
library(metafor)
library(ggplot2)
library(gsheet)
library(cowplot)
library(broom)
library(writexl)
library(readxl)
library(ggthemes)
library(minpack.lm)
ma <- gsheet2tbl("https://docs.google.com/spreadsheets/d/151DE26uSMN4WBS0PTQcjdw7BO56gXy_VilFZS3b9AAM/edit?usp=sharing")
molina = read_xlsx("data/molina.xlsx")
ma1 = ma %>%
dplyr::select(study, cultivar, sev,yld,block,ai,state,year)
molina1 = molina %>%
dplyr::select(study, cultivar, sev,yield,rep,fungic,state,year)
colnames(molina1) = c("study","cultivar","sev","yld","block","ai","state","year")
ma_c = rbind(ma1,molina1)
unique(ma_c$state)
ma_c = ma_c %>%
filter(!is.na(yld)) %>%
filter(!is.na(sev)) %>%
filter(!is.na(cultivar))
ma_c_reg = ma_c  %>%
#dplyr::select(active_ingredient, block, sev,yld) %>%
group_by(cultivar) %>%
do(tidy(lm(.$yld ~ .$sev)))
ma_c_reg
ma_c_reg = ma_c_reg |>
filter(term %in% c("(Intercept)",".$sev"))
ma_c_reg[ma_c_reg$term== "(Intercept)",c("parameters")] <- "Intercept"
ma_c_reg[ma_c_reg$term== ".$sev",c("parameters")] <- "Slope"
b1_c = ma_c_reg |>
dplyr::filter(parameters == "Slope") |>
#filter(estimate < 0) %>%
dplyr::group_by(cultivar) |>
summarise(
Slope = estimate
)
b0_c = ma_c_reg |>
filter(parameters == "Intercept") |>
group_by(cultivar) |>
summarise(
Intercept = estimate
)
parameters_c = cbind(b1_c,b0_c)
parameters_c[,3] = NULL
parameters_c = parameters_c %>%
filter(!cultivar %in% c("B√îNUS","M9144_RR","74178 RSF IPRO"))
dc_c = parameters_c %>%
group_by(cultivar) %>%
summarise(
DC = (Slope/Intercept)*-1,
b1= Intercept/1000,
DC = DC,
DC_perc = DC*100
)
dc_c
ma_c_reg
dc_c
ma |>
filter(!cultivar %in% c("63i64RSF IPRO","8579 RSF IPRO",
"CD 2728 IPRO","DM 75i76 IPRO","M8210 IPRO","TMG 2181 IPRO")) %>%
filter(!is.na(sev)) |>
ggplot(aes(sev))+
geom_histogram(fill = "black", color = "white")+
ggthemes::theme_few()+
#theme_minimal()+
#facet_wrap(~year)+
labs(x = "TS Severity (%)",
y = "Count")+
facet_wrap(~cultivar)+
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
sev_cultivar = ma |>
filter(ai == "_CHECK") %>%
filter(cultivar %in% c("63i64RSF IPRO","859 RSF IPRO",
"CD 2728 IPRO","DM 75i76 IPRO","M8210 IPRO","TMG 2181 IPRO","HO MARACA√ç IPRO")) %>%
filter(!is.na(sev)) |>
ggplot(aes(sev))+
geom_histogram(fill = "black", color = "white", bins = 10)+
#theme_minimal()+
ggthemes::theme_few()+
#facet_wrap(~year)+
labs(x = "TS severity",
y = "Count")+
#facet_wrap(~condition)+
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
sev_cultivar
ggsave("fig/cultivar_severity.png", bg = "white", dpi = 600, height = 9, width = 10)
sev = ma |>
filter(!is.na(sev)) |>
ggplot(aes(sev))+
geom_histogram(fill = "black", color = "white")+
#D2691E
ggthemes::theme_few()+
#theme_minimal()+
#facet_wrap(~year)+
labs(x = "TS Severity (%)",
y = "Count")+
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
#00798C
#236E96
sev_log = ma |>
filter(!is.na(sev)) |>
ggplot(aes(log10(sev)))+
geom_histogram(fill = "black", color = "white")+
#theme_minimal()+
ggthemes::theme_few()+
#facet_wrap(~year)+
labs(x = "log10(TS severity)",
y = "Count")+
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
yld = ma |>
filter(!is.na(yld)) |>
ggplot(aes(yld))+
geom_histogram(fill = "black", color = "white")+
#scale_y_continuous(breaks = c(0, 200, 400, 600,800), limits = c(0, 800))+
ggthemes::theme_few()+
#theme_minimal()+
#facet_wrap(~year)+
labs(x = "Yield (Kg/ha)",
y = "Count")+
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
#FF9933
plot_grid(sev,sev_log,yld, labels = c("A","B","C"), nrow = 3, align = "V")
ggsave("fig/overall.png", bg = "white", dpi = 600, height = 9, width = 10)
unique(ma$cultivar)
ma |>
filter(!cultivar %in% c("63i64RSF IPRO","8579 RSF IPRO",
"CD 2728 IPRO","DM 75i76 IPRO","M8210 IPRO","TMG 2181 IPRO")) %>%
filter(!is.na(sev)) |>
ggplot(aes(sev))+
geom_histogram(fill = "black", color = "white")+
ggthemes::theme_few()+
#theme_minimal()+
#facet_wrap(~year)+
labs(x = "TS Severity (%)",
y = "Count")+
facet_wrap(~cultivar)+
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
yld_cultivar = ma |>
filter(cultivar %in% c("63i64RSF IPRO","879 RSF IPRO",
"CD 2728 IPRO","DM 75i76 IPRO","M8210 IPRO","TMG 2181 IPRO","HO MARACA√ç IPRO")) %>%
filter(!is.na(yld)) |>
ggplot(aes(yld))+
geom_histogram(fill = "black", color = "white", bins = 10)+
#scale_y_continuous(breaks = c(0, 200, 400, 600,800), limits = c(0, 800))+
ggthemes::theme_few()+
#theme_minimal()+
#facet_wrap(~year)+
labs(x = "Yield (Kg/ha)",
y = "Count")+
#facet_wrap(~condition)+
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
yld_cultivar
ggsave("fig/cultivar_yield.png", bg = "white", dpi = 600, height = 9, width = 10)
sev_ai = ma |>
filter(ai %in% c("BIX+PROT+TRIFL","AZOX+TEBU+MANC","FLUX+PYRA","_CHECK")) %>%
filter(!is.na(sev)) |>
ggplot(aes(sev))+
geom_histogram(fill = "black", color = "white", bins = 10)+
#theme_minimal()+
ggthemes::theme_few()+
#facet_wrap(~year)+
labs(x = "TS severity",
y = "Count")+
facet_wrap(~ai)+
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
sev_ai
ggsave("fig/ai_severity.png", bg = "white", dpi = 600, height = 9, width = 10)
yld_ai = ma |>
filter(ai %in% c("BIX+PROT+TRIFL",
"AZOX+TEBU+MANC","FLUX+PYRA","_CHECK")) %>%
filter(!is.na(yld)) |>
ggplot(aes(yld))+
geom_histogram(fill = "black", color = "white", bins = 15)+
#scale_y_continuous(breaks = c(0, 200, 400, 600,800), limits = c(0, 800))+
ggthemes::theme_few()+
#theme_minimal()+
#facet_wrap(~year)+
labs(x = "Yield (Kg/ha)",
y = "Count")+
facet_wrap(~ai)+
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
yld_ai
ggsave("fig/ai_yield.png", bg = "white", dpi = 600, height = 9, width = 10)
